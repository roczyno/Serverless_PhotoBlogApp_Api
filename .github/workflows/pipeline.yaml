name: Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature**'
  delete:
    branches:
      - 'feature**'

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SAM_TEMPLATE: template.yaml
  PRIMARY_REGION: eu-west-1
  SECONDARY_REGION: eu-central-1
  HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}

jobs:
  deploy-secondary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.SECONDARY_REGION }}
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Build resources
        run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Deploy to secondary region
        run: |
          sam deploy \
            --stack-name photoblogapp-secondary \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --region ${SECONDARY_REGION} \
            --resolve-s3 \
            --no-fail-on-empty-changeset \
            --no-confirm-changeset \
            --parameter-overrides \
              Environment=secondary \
              PrimaryRegion=${PRIMARY_REGION} \
              SecondaryRegion=${SECONDARY_REGION} \
              HostedZoneId=${HOSTED_ZONE_ID}

      - name: Store secondary API ID in primary region
        run: |
          API_ID=$(aws cloudformation describe-stacks \
            --stack-name photoblogapp-secondary \
            --region ${SECONDARY_REGION} \
            --query 'Stacks[0].Outputs[?OutputKey==`ApiId`].OutputValue' \
            --output text)
          
          aws ssm put-parameter \
            --name "/photoblog/secondary/api-id" \
            --value "$API_ID" \
            --type String \
            --overwrite \
            --region ${PRIMARY_REGION}

  deploy-primary:
    needs: deploy-secondary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.PRIMARY_REGION }}
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Build resources
        run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Deploy to primary region
        run: |
          sam deploy \
            --stack-name photoblogapp-primary \
            --capabilities CAPABILITY_IAM \
            --region ${PRIMARY_REGION} \
            --resolve-s3 \
            --no-fail-on-empty-changeset \
            --no-confirm-changeset \
            --parameter-overrides \
              Environment=primary \
              PrimaryRegion=${PRIMARY_REGION} \
              SecondaryRegion=${SECONDARY_REGION} \
              HostedZoneId=${HOSTED_ZONE_ID}
